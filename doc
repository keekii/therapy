for (let i = -15; i < 85; i++) {
        const time = day.timestamp + i * 24 * 60 * 60 * 1000;
        const strTime = this.timeToString(time);
        console.log(i);
        if (!this.state.items[strTime]) {
          this.state.items[strTime] = [];

          const numItems = 0;
          for (let j = 0; j < numItems; j++) {
            // true = มี event
            this.state.items[strTime].push({
              name: `Item for ${strTime}`,
              height: Math.max(50, Math.floor(Math.random() * 150)),
            });
          }
        }
      }
      //console.log(this.state.items);
      const newItems = {};
      Object.keys(this.state.items).forEach((key) => {
        newItems[key] = this.state.items[key];
      });
      this.setState({
        items: newItems,
      });


      
      <View
            style={{
              flex: 1,
              flexDirection: "row",
              justifyContent: "space-between",
            }}
          >
            <TouchableOpacity
              style={styles.deleteContainer}
              title="Delete"
              onPress={() => {
                this.setModalVisible(true);
              }}
            >
              <Text style={styles.deleteText}>Delete</Text>
            </TouchableOpacity>
            <TouchableOpacity
              style={styles.submitContainer}
              title="Edit"
              onPress={() => this.props.navigation.navigate("EditAppointments")}
            >
              <Text style={styles.submitText}>Edit</Text>
            </TouchableOpacity>
          </View>
          <Modal
            animationType={"fade"}
            transparent={true}
            onRequestClose={() => this.setModalVisible(false)}
            visible={modalVisible}
          >
            <View style={styles.popupOverlay}>
              <View style={styles.popup}>
                <View style={styles.popupContent}>
                  <ScrollView contentContainerStyle={styles.modalInfo}>
                    <View
                      style={{
                        //marginTop: 30,
                        width: 200,
                        alignItems: "center",
                        justifyContent: "center",
                      }}
                    >
                      <Text style={styles.modalText}>
                        Do you want to delete this appointments ?
                      </Text>
                      <Ionicons name="md-trash" size={30} color="#00CAD3" />
                    </View>
                    <Text></Text>
                    <View
                      style={{
                        flex: 1,
                        flexDirection: "row",
                        justifyContent: "space-between",
                      }}
                    >
                      <TouchableOpacity
                        style={styles.modalDeleteContainer}
                        title="Cancel"
                        onPress={() => {
                          this.setModalVisible(false);
                        }}
                      >
                        <Text style={styles.modalDeleteText}>Cancel</Text>
                      </TouchableOpacity>
                      <TouchableOpacity
                        style={styles.modalSubmitContainer}
                        title="Submit"
                        onPress={() => {
                          this.setModalVisible(false);
                          this.props.navigation.navigate("Calendar");
                        }}
                      >
                        <Text style={styles.modalSubmitText}>Submit</Text>
                      </TouchableOpacity>
                    </View>
                  </ScrollView>
                </View>
              </View>
            </View>
          </Modal>


          